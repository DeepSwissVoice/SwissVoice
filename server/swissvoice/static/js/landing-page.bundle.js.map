{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/page-setup.js","webpack:///./src/js/utils.js","webpack:///./src/js/pages/landing-page.js","webpack:///./src/js/api.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","setup","options","assign","setupAPI","async","init","elements","buttons","id","selector","entries","jquery__WEBPACK_IMPORTED_MODULE_0___default","listener","click","setupPage","_api__WEBPACK_IMPORTED_MODULE_1__","ready","onReady","raven_js__WEBPACK_IMPORTED_MODULE_2___default","a","config","release","install","context","onBeforeLoad","sleep","timeout","Promise","res","setTimeout","landing_page_elements","page_setup","innerWidth","svInfo1","height","svInfo2","flyText","removeClass","logoScreen","addClass","flyTextLi","toggleClass","loadingAnimation","__webpack_exports__","settings","domain","minCacheSize","cacheRestockCount","readyPromise","regionId","currentText","currentSample","textCache","sampleCache","regions","cantons","buildUrl","endpoint","join","ensureTextCache","url","resp","getJSON","count","success","raven_js__WEBPACK_IMPORTED_MODULE_1___default","captureBreadcrumb","Error","texts","ensureSampleCache","samples","region","apiDomain","canton","_id","fetchRegions","getRegions","getCantons","[object Object]","item","payload","ajax","type","contentType","JSON","stringify","opinion","voiceId","Boolean","voice_id","vote","blob","textId","text_id","method","processData"],"mappings":"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","file":"landing-page.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([206,0,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import $ from \"jquery\";\r\nimport SwissVoiceAPI from \"./api\";\r\nimport Raven from \"raven-js\";\r\n\r\nexport default function setup(options) {\r\n    options = Object.assign({setupAPI: true}, options);\r\n    const elements = {};\r\n\r\n    function setupPage(elements, buttons) {\r\n        if (elements) {\r\n            for (const [id, selector] of Object.entries(elements)) {\r\n                elements[id] = $(selector);\r\n            }\r\n        }\r\n        if (buttons) {\r\n            for (const [selector, listener] of Object.entries(buttons)) {\r\n                $(selector).click(listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function init() {\r\n        setupPage(options.elements, options.buttons);\r\n        if (options.setupAPI) {\r\n            await SwissVoiceAPI.ready;\r\n        }\r\n        if (options.onReady) {\r\n            options.onReady();\r\n        }\r\n    }\r\n\r\n    function _init() {\r\n        if (options.setupAPI) {\r\n            SwissVoiceAPI.setup();\r\n        }\r\n        if (options.onBeforeLoad) {\r\n            options.onBeforeLoad();\r\n        }\r\n        $(init);\r\n    }\r\n\r\n    Raven.config(\"https://23dcfd51df56440486089720f7184663@sentry.io/1214965\", {\r\n        release: VERSION\r\n    }).install();\r\n    Raven.context(_init);\r\n\r\n    return {\r\n        elements: elements\r\n    }\r\n}","export function shuffle(array) {\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function sleep(timeout) {\r\n    return new Promise((res) => setTimeout(res, timeout));\r\n}","import setup from \"../page-setup\";\r\nimport {sleep} from \"../utils\";\r\n\r\nfunction setInfoTextHeight() {\r\n    if (window.innerWidth > 575) {\r\n        elements.svInfo1.height(elements.svInfo2.height());\r\n    } else {\r\n        elements.svInfo1.height(300);\r\n    }\r\n}\r\n\r\nasync function loadingAnimation() {\r\n    // This is a\r\n    await sleep(500);\r\n    elements.flyText.removeClass(\"off\");\r\n    await sleep(3000);\r\n    elements.logoScreen.addClass(\"fade-out\");\r\n    await sleep(1000);\r\n    elements.flyTextLi.addClass(\"fade-out\");\r\n    elements.logoScreen.toggleClass(\"fade-out loaded\");\r\n}\r\n\r\nasync function init() {\r\n    setInfoTextHeight();\r\n    await loadingAnimation();\r\n}\r\n\r\nconst {elements} = setup({\r\n    onReady: init,\r\n    elements: {\r\n        flyText: \".fly-text\",\r\n        flyTextLi: \".fly-text li\",\r\n        logoScreen: \".logo-screen\",\r\n        svInfo1: \"#sv-info-tx1\",\r\n        svInfo2: \"#sv-info-tx2\"\r\n    }\r\n});","import $ from \"jquery\";\r\nimport Raven from \"raven-js\";\r\n\r\nexport default (() => {\r\n    const settings = {\r\n        domain: \"/\",\r\n        minCacheSize: 5,\r\n        cacheRestockCount: 10\r\n    };\r\n\r\n    let readyPromise;\r\n    let regionId;\r\n    let currentText;\r\n    let currentSample;\r\n\r\n    const textCache = [];\r\n    const sampleCache = [];\r\n    const regions = [];\r\n    const cantons = [];\r\n\r\n    function buildUrl(...endpoint) {\r\n        return settings.domain + endpoint.join(\"/\");\r\n    }\r\n\r\n    async function ensureTextCache() {\r\n        if (textCache.length < settings.minCacheSize) {\r\n            const url = buildUrl(\"api\", \"text\", regionId);\r\n            const resp = await $.getJSON(url, {\r\n                count: settings.cacheRestockCount\r\n            });\r\n            if (!resp.success) {\r\n                Raven.captureBreadcrumb({data: resp});\r\n                throw new Error(\"Couldn't get any texts\");\r\n            }\r\n            textCache.push(...resp.texts);\r\n        }\r\n    }\r\n\r\n    async function ensureSampleCache() {\r\n        if (sampleCache.length < settings.minCacheSize) {\r\n            const url = buildUrl(\"api\", \"voice\", regionId);\r\n            const resp = await $.getJSON(url, {\r\n                count: settings.cacheRestockCount\r\n            });\r\n            if (!resp.success) {\r\n                Raven.captureBreadcrumb({data: resp});\r\n                throw new Error(\"Couldn't get any samples\");\r\n            }\r\n            sampleCache.push(...resp.samples);\r\n        }\r\n    }\r\n\r\n    async function fetchRegions() {\r\n        if (regions.length > 0) {\r\n            return false;\r\n        }\r\n        const url = buildUrl(\"api\", \"regions\");\r\n        const resp = await $.getJSON(url);\r\n        if (!resp.success) {\r\n            Raven.captureBreadcrumb({data: resp});\r\n            throw new Error(\"Couldn't fetch any regions!\");\r\n        }\r\n        regions.push(...resp.regions);\r\n\r\n        for (const region of regions) {\r\n            for (const canton of region.cantons) {\r\n                canton.region = region._id;\r\n                cantons.push(canton);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function setup(region, apiDomain) {\r\n        if (region) {\r\n            regionId = region;\r\n\r\n            await ensureTextCache();\r\n            await ensureSampleCache();\r\n        }\r\n        if (apiDomain) {\r\n            settings.domain = apiDomain;\r\n        }\r\n\r\n        await fetchRegions();\r\n    }\r\n\r\n    return {\r\n        region(region) {\r\n            if (region) {\r\n                regionId = region;\r\n            }\r\n            return regionId;\r\n        },\r\n        setup(region, apiDomain) {\r\n            readyPromise = setup(region, apiDomain);\r\n            return readyPromise;\r\n        },\r\n        get ready() {\r\n            return readyPromise;\r\n        },\r\n        getRegions() {\r\n            return regions;\r\n        },\r\n        getCantons() {\r\n            return cantons;\r\n        },\r\n        getText() {\r\n            ensureTextCache();\r\n            const item = textCache.shift();\r\n            currentText = item;\r\n            return item;\r\n        },\r\n        getSample() {\r\n            ensureSampleCache();\r\n            const item = sampleCache.shift();\r\n            currentSample = item;\r\n            return item;\r\n        },\r\n        async proposeTexts(...texts) {\r\n            const payload = {texts: texts};\r\n            const url = buildUrl(\"api\", \"text\", regionId);\r\n            return await $.ajax(url, {\r\n                type: \"POST\",\r\n                contentType: \"application/json\",\r\n                data: JSON.stringify(payload)\r\n            });\r\n        },\r\n        async approveSample(opinion, voiceId) {\r\n            opinion = Boolean(opinion);\r\n            voiceId = voiceId || currentSample.voice_id;\r\n            const url = buildUrl(\"api\", \"vote\", voiceId);\r\n            const resp = await $.getJSON(url, {\r\n                \"vote\": opinion\r\n            });\r\n            return resp.success;\r\n        },\r\n        async uploadSample(blob, textId) {\r\n            textId = textId || currentText.text_id;\r\n            const url = buildUrl(\"api\", \"upload\", textId);\r\n            return await $.ajax(url, {\r\n                method: \"POST\",\r\n                contentType: blob.type,\r\n                data: blob,\r\n                processData: false\r\n            });\r\n        },\r\n        async getStatistics() {\r\n            const url = buildUrl(\"api\", \"stats\");\r\n            const result = await $.getJSON(url);\r\n            return result.data;\r\n        }\r\n    };\r\n})();"],"sourceRoot":""}