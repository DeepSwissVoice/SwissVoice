{"version":3,"sources":["webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/conversions.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/index.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/chart.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","Arc","Line","Point","Rectangle","formatters","value","isArray","linear","tickValue","index","ticks","delta","Math","abs","floor","logDelta","log10","tickString","numDecimal","max","min","toFixed","logarithmic","remain","pow","toExponential","filterByPosition","array","position","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","weight","defaults","addBox","chart","item","boxes","fullWidth","push","removeBox","layoutItem","indexOf","splice","configure","prop","props","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","each","concat","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","noop","uid","id","isNullOrUndef","Array","toString","call","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","map","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","plugins","_plugins","_cacheId","register","p","plugin","unregister","idx","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","opts","global","_invalidate","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","data","datasets","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","elements","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","slice","label","_datasetIndex","x-axis","point","nearest","ret","getArea","intersectsItem","inXRange","inYRange","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","undefined","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mixinColor","w1","w2","toJSON","result","console","error","spaces","maxes","getValues","space","charAt","capped","chans","round","sname","svalues","window","layouts","title","display","fontStyle","lineHeight","text","Title","legendHitBoxes","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","paddingLeft","paddingTop","paddingRight","paddingBottom","fontSize","defaultFontSize","lineCount","toLineHeight","textSize","pos","draw","ctx","globalDefaults","titleX","titleY","defaultFontStyle","fontFamily","defaultFontFamily","titleFont","fontString","offset","rotation","fillStyle","fontColor","defaultFontColor","font","PI","save","translate","textAlign","textBaseline","fillText","restore","createNewTitleBlockAndAttach","titleOpts","titleBlock","_element","beforeInit","getBoxWidth","labelOpts","usePointStyle","SQRT2","boxWidth","legend","onClick","legendItem","ci","onHover","labels","generateLabels","backgroundColor","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","join","Legend","doughnutMode","legendItems","filter","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","line","legendWidth","cursor","textWidth","isNaN","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","drawPoint","strokeRect","fillRect","drawLegendBox","halfFontSize","xLeft","yMiddle","beginPath","moveTo","lineTo","stroke","handleEvent","changed","lh","hitBox","createNewLegendAndAttach","legendOpts","afterEvent","filler","propagate","mappers","fill","points","_children","boundary","decodeFill","el","parseFloat","computeBoundary","scale","_scale","scaleBottom","scaleTop","scaleZero","getBasePosition","getBasePixel","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","clipArea","loop","p0","p1","d0","d1","span","spanGaps","closePath","doFill","_loop","unclipArea","Chart","Scatter","context","Radar","PolarArea","Doughnut","Bubble","Bar","hover","mode","scales","xAxes","yAxes","showLines","tooltips","callbacks","xLabel","yLabel","controllers","scatter","tension","radar","DatasetController","datasetElementType","dataElementType","linkScales","reset","getMeta","custom","getDataset","lineElementOptions","lineTension","updateElement","updateBezierControlPoints","pointElementOptions","pointPosition","getPointPositionForValue","pointRadius","hitRadius","pointHitRadius","xCenter","yCenter","pointBackgroundColor","pointBorderColor","pointBorderWidth","controlPoints","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","setHoverStyle","hoverRadius","pointHoverRadius","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","removeHoverStyle","angleLines","gridLines","circular","pointLabels","beginAtZero","animation","animateRotate","animateScale","startAngle","ds","arcOpts","arc","polarArea","outerRadius","innerRadius","cutoutPercentage","radiusLength","getVisibleDatasetCount","countVisibleElements","animationOpts","circumference","calculateCircumference","visibleCount","datasetStartAngle","getDistanceFromCenterForValue","endAngle","resetRadius","lineEnabled","showLine","getScaleForId","yAxisID","steppedLine","stepped","cubicInterpolationMode","getPointBackgroundColor","getPointBorderColor","getPointBorderWidth","yScale","xScale","xAxisID","pointOptions","getPixelForValue","NaN","calculatePointY","_xScale","_yScale","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","getRightValue","rightValue","area","capControlPoint","pt","splineCurveMonotone","capBezierPoints","tooltipItem","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","cos","sin","end","contains0","contains90","contains180","contains270","cutout","size","getMaxBorderWidth","offsetX","offsetY","total","calculateTotal","arcs","hoverWidth","_chart","datasetLabel","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","_options","resolve","dataIndex","categoryPercentage","barPercentage","offsetGridLines","rectangle","borderSkipped","bar","stack","rects","_ruler","getRuler","rectangleOptions","updateElementGeometry","vscale","getValueScale","base","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacks","getStackCount","getStackIndex","name","stackCount","pixels","barThickness","prev","curr","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","hi","lookup","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minor","minUnit","interval","factor","ceil","determineUnitForAutoTicks","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","milliseconds","determineStepSize","add","TimeScale","Scale","Error","mergeTicksOptions","warn","rawValue","t","determineDataLimits","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","bounds","_unit","duration","diff","as","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","tickOpts","formatter","userCallback","convertTicksToLabels","getPixelForOffset","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","angle","toRadians","maxRotation","cosRotation","sinRotation","exampleTime","exampleLabel","innerWidth","scaleService","registerScaleType","displayFormat","autoSkip","Ticks","defaultConfig","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","style","family","measureLabelSize","longestText","h","determineLimits","getTextAlignForAngle","spacing","adjustPointPositionForLabelHeight","numberOrZero","param","LinearRadialScale","LinearScaleBase","tickFontSize","drawingArea","NEGATIVE_INFINITY","handleTickRangeOptions","getTickLimit","maxTicksLimit","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","angleRadians","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","gridLineOpts","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","ticksAsNumbers","drawRadiusLine","tickFontColor","labelWidth","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","LogarithmicScale","IDMatches","minNotZero","hasStacks","valuesPerStack","valuesForType","minVal","maxVal","generationOptions","dataRange","exp","significand","tickVal","endExp","endSignificand","precision","lastTick","generateTicks","tickValues","_getFirstTickValue","innerDimension","sign","firstTickValue","LinearScale","positiveValues","negativeValues","relativePoints","maxTicks","handleDirectionalChanges","DatasetScale","getLabels","xLabels","yLabels","findIndex","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","_ticks","horz","valueDimension","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","niceRange","niceNum","niceMin","niceMax","almostWhole","numSpaces","almostEquals","zeroLineIndex","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","Tooltip","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","body","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x1","y1","x2","y2","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","getElementsAtEventForMode","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","mirror","autoSkipPadding","labelOffset","computeTextSize","parseFontOptions","parseLineHeight","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","tickWidth","scaleLabelOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","optionMajorTicks","isRotated","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","scaleLabelX","scaleLabelY","halfLineHeight","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","addElements","updateIndex","scaleID","destroy","createMetaDataset","createMetaData","metaData","addElementAndReset","buildOrUpdateElements","defineProperty","configurable","enumerable","toUpperCase","res","object","listenArrayEvents","resyncElements","easingValue","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","Interaction","platform","positionIsHorizontal","types","instances","construct","configMerge","initConfig","aspectRatio","_bufferedRender","get","set","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","animationService","cancelAnimation","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","lazy","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","render","updateDataset","animationOptions","onComplete","Animation","numSteps","animationObject","easingFunction","effects","currentStep","stepDecimal","onAnimationProgress","onProgress","onAnimationComplete","addAnimation","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","events","updateHoverStyle","bufferedRequest","animating","animationDuration","hoverOptions","Controller","frameDuration","animations","dropFrames","request","requestAnimationFrame","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","matches","match","eventListenerOptions","supports","passive","node","createEvent","nativeEvent","addResizeListener","expando","resizer","document","createElement","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","container","parentNode","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","displayHeight","initCanvas","removeAttribute","proxies","event","fromNativeEvent","addEvent","removeEvent","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","mouseX","mouseY","inLabelRange","xRange","current","currentVM","globalOptionLineElements","lastDrawnIndex","chartX","chartY","pointRelativePosition","getAngleFromPoint","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","parseInt","rgba","percentaString","hsla","num","hexDouble","str","getRgb","getHsl","getAlpha","g","reverseNames","rgb2hsl","rgb2hsv","s","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","f","q","hwb2rgb","n","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","atan2","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","inputs","clearRect","roundedRect","rx","ry","rect","edgeLength","xOffset","yOffset","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","pluginService","PluginBase","canvasHelpers","layoutService"],"mappings":"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","file":"vendors~chart.js.bundle.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n"],"sourceRoot":""}